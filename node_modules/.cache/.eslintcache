[{"/Users/admin/Desktop/shit/c19db/src/index.js":"1","/Users/admin/Desktop/shit/c19db/src/App.js":"2","/Users/admin/Desktop/shit/c19db/src/reportWebVitals.js":"3","/Users/admin/Desktop/shit/c19db/src/components/navigationBar.jsx":"4","/Users/admin/Desktop/shit/c19db/src/components/footer.jsx":"5","/Users/admin/Desktop/shit/c19db/src/components/news/news.jsx":"6","/Users/admin/Desktop/shit/c19db/src/components/vaccinations/vaccinations.jsx":"7","/Users/admin/Desktop/shit/c19db/src/components/regional/regional.jsx":"8","/Users/admin/Desktop/shit/c19db/src/components/informationPage/infoPage.jsx":"9","/Users/admin/Desktop/shit/c19db/src/components/home/homepage.jsx":"10","/Users/admin/Desktop/shit/c19db/src/components/news/pagination.js":"11","/Users/admin/Desktop/shit/c19db/src/components/news/newsCard.jsx":"12","/Users/admin/Desktop/shit/c19db/src/components/news/weeklyCaseChart.jsx":"13","/Users/admin/Desktop/shit/c19db/src/components/regional/regionalTable.jsx":"14","/Users/admin/Desktop/shit/c19db/src/components/home/overviewContainer.jsx":"15","/Users/admin/Desktop/shit/c19db/src/components/home/information.jsx":"16","/Users/admin/Desktop/shit/c19db/src/components/home/caseChart.jsx":"17","/Users/admin/Desktop/shit/c19db/src/components/home/vaxChart.jsx":"18","/Users/admin/Desktop/shit/c19db/src/components/home/regionalOverview.jsx":"19","/Users/admin/Desktop/shit/c19db/src/components/home/caseData.jsx":"20","/Users/admin/Desktop/shit/c19db/src/components/home/loader.jsx":"21","/Users/admin/Desktop/shit/c19db/src/components/home/regionalPieChart.jsx":"22","/Users/admin/Desktop/shit/c19db/src/components/news/usePagination.jsx":"23","/Users/admin/Desktop/shit/presentation/c19db/src/index.js":"24","/Users/admin/Desktop/shit/presentation/c19db/src/reportWebVitals.js":"25","/Users/admin/Desktop/shit/presentation/c19db/src/App.js":"26","/Users/admin/Desktop/shit/presentation/c19db/src/components/navigationBar.jsx":"27","/Users/admin/Desktop/shit/presentation/c19db/src/components/footer.jsx":"28","/Users/admin/Desktop/shit/presentation/c19db/src/components/informationPage/infoPage.jsx":"29","/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regional.jsx":"30","/Users/admin/Desktop/shit/presentation/c19db/src/components/vaccinations/vaccinations.jsx":"31","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/news.jsx":"32","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/homepage.jsx":"33","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/pagination.js":"34","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/newsCard.jsx":"35","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/weeklyCaseChart.jsx":"36","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/overviewContainer.jsx":"37","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/caseChart.jsx":"38","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/vaxChart.jsx":"39","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/information.jsx":"40","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/regionalOverview.jsx":"41","/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regionalTable.jsx":"42","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/caseData.jsx":"43","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/usePagination.jsx":"44","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/regionalPieChart.jsx":"45","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/loader.jsx":"46","/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regionalLineChart.jsx":"47","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/newsList.js":"48","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/caseDataRaw.js":"49","/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regionalCaseData.js":"50","/Users/admin/Desktop/shit/presentation/c19db/src/components/vaccinations/vaccinationData.js":"51"},{"size":226,"mtime":1629394979572,"results":"52","hashOfConfig":"53"},{"size":1177,"mtime":1629394979505,"results":"54","hashOfConfig":"53"},{"size":362,"mtime":1629394979572,"results":"55","hashOfConfig":"53"},{"size":557,"mtime":1629394979569,"results":"56","hashOfConfig":"53"},{"size":205,"mtime":1629394979566,"results":"57","hashOfConfig":"53"},{"size":4279,"mtime":1629394979569,"results":"58","hashOfConfig":"53"},{"size":7239,"mtime":1629394979571,"results":"59","hashOfConfig":"53"},{"size":2163,"mtime":1629394979571,"results":"60","hashOfConfig":"53"},{"size":941,"mtime":1629394979569,"results":"61","hashOfConfig":"53"},{"size":2049,"mtime":1629394979567,"results":"62","hashOfConfig":"53"},{"size":2225,"mtime":1629395387589,"results":"63","hashOfConfig":"53"},{"size":382,"mtime":1629394979570,"results":"64","hashOfConfig":"53"},{"size":2741,"mtime":1629394979570,"results":"65","hashOfConfig":"53"},{"size":226,"mtime":1629394979571,"results":"66","hashOfConfig":"53"},{"size":989,"mtime":1629394979568,"results":"67","hashOfConfig":"53"},{"size":4456,"mtime":1629394979567,"results":"68","hashOfConfig":"53"},{"size":4349,"mtime":1629394979566,"results":"69","hashOfConfig":"53"},{"size":2941,"mtime":1629394979568,"results":"70","hashOfConfig":"53"},{"size":3344,"mtime":1629394979568,"results":"71","hashOfConfig":"53"},{"size":3130,"mtime":1629394979567,"results":"72","hashOfConfig":"53"},{"size":189,"mtime":1629394979567,"results":"73","hashOfConfig":"53"},{"size":549,"mtime":1629394979568,"results":"74","hashOfConfig":"53"},{"size":2019,"mtime":1629394979570,"results":"75","hashOfConfig":"53"},{"size":226,"mtime":1629430069653,"results":"76","hashOfConfig":"77"},{"size":362,"mtime":1629430069654,"results":"78","hashOfConfig":"77"},{"size":1135,"mtime":1630034574454,"results":"79","hashOfConfig":"77"},{"size":557,"mtime":1629430069651,"results":"80","hashOfConfig":"77"},{"size":205,"mtime":1629430069646,"results":"81","hashOfConfig":"77"},{"size":955,"mtime":1630034574462,"results":"82","hashOfConfig":"77"},{"size":4248,"mtime":1630045190249,"results":"83","hashOfConfig":"77"},{"size":7562,"mtime":1630045338779,"results":"84","hashOfConfig":"77"},{"size":4386,"mtime":1630039990125,"results":"85","hashOfConfig":"77"},{"size":2575,"mtime":1630045190244,"results":"86","hashOfConfig":"77"},{"size":2343,"mtime":1630039920658,"results":"87","hashOfConfig":"77"},{"size":364,"mtime":1630034574463,"results":"88","hashOfConfig":"77"},{"size":3134,"mtime":1630045190248,"results":"89","hashOfConfig":"77"},{"size":1048,"mtime":1630004028629,"results":"90","hashOfConfig":"77"},{"size":3588,"mtime":1630036755632,"results":"91","hashOfConfig":"77"},{"size":3122,"mtime":1630045190246,"results":"92","hashOfConfig":"77"},{"size":4456,"mtime":1629430069648,"results":"93","hashOfConfig":"77"},{"size":3613,"mtime":1630045190245,"results":"94","hashOfConfig":"77"},{"size":2528,"mtime":1629430798051,"results":"95","hashOfConfig":"77"},{"size":3166,"mtime":1630004175474,"results":"96","hashOfConfig":"77"},{"size":1952,"mtime":1630034574463,"results":"97","hashOfConfig":"77"},{"size":627,"mtime":1630034574459,"results":"98","hashOfConfig":"77"},{"size":189,"mtime":1629430069648,"results":"99","hashOfConfig":"77"},{"size":1872,"mtime":1629430798051,"results":"100","hashOfConfig":"77"},{"size":7061825,"mtime":1630040017356,"results":"101","hashOfConfig":"77"},{"size":72023,"mtime":1630045190243,"results":"102","hashOfConfig":"77"},{"size":255992,"mtime":1630045190251,"results":"103","hashOfConfig":"77"},{"size":96544,"mtime":1630045190252,"results":"104","hashOfConfig":"77"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19xw0cd",{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},"vjqje5",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"154"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"181","usedDeprecatedRules":"154"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"154"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"154"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Desktop/shit/c19db/src/index.js",["222"],"/Users/admin/Desktop/shit/c19db/src/App.js",["223","224"],"/Users/admin/Desktop/shit/c19db/src/reportWebVitals.js",[],"/Users/admin/Desktop/shit/c19db/src/components/navigationBar.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/footer.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/news/news.jsx",["225","226","227"],"/Users/admin/Desktop/shit/c19db/src/components/vaccinations/vaccinations.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/regional/regional.jsx",["228"],"/Users/admin/Desktop/shit/c19db/src/components/informationPage/infoPage.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/home/homepage.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/news/pagination.js",[],"/Users/admin/Desktop/shit/c19db/src/components/news/newsCard.jsx",["229"],"/Users/admin/Desktop/shit/c19db/src/components/news/weeklyCaseChart.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/regional/regionalTable.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/home/overviewContainer.jsx",["230"],"/Users/admin/Desktop/shit/c19db/src/components/home/information.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/home/caseChart.jsx",["231"],"/Users/admin/Desktop/shit/c19db/src/components/home/vaxChart.jsx",["232"],"/Users/admin/Desktop/shit/c19db/src/components/home/regionalOverview.jsx",["233","234","235","236","237","238","239","240"],"/Users/admin/Desktop/shit/c19db/src/components/home/caseData.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/home/loader.jsx",[],"/Users/admin/Desktop/shit/c19db/src/components/home/regionalPieChart.jsx",["241","242","243","244"],"/Users/admin/Desktop/shit/c19db/src/components/news/usePagination.jsx",["245"],"/Users/admin/Desktop/shit/presentation/c19db/src/index.js",["246"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n",["247","248"],"/Users/admin/Desktop/shit/presentation/c19db/src/reportWebVitals.js",[],"/Users/admin/Desktop/shit/presentation/c19db/src/App.js",["249"],"import React from 'react';\nimport './App.css';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n//   Redirect,\n//   useParams\n} from \"react-router-dom\";\n\n\nimport NavigationBar from './components/navigationBar'\nimport Home from './components/home/homepage'\nimport Vaccinations from './components/vaccinations/vaccinations';\nimport Regional from './components/regional/regional'\nimport NewsPage from './components/news/news';\nimport Footer from './components/footer'\nimport InfoPage from './components/informationPage/infoPage'\n\nfunction App() {\n  return (\n    <div>\n        <BrowserRouter>\n          <NavigationBar/>\n            <Switch>\n              <Route exact path=\"/\" component={Home}/>\n                    {/* <Route path=\"*\" render={() => <Redirect to=\"/\" />} /> */}\n              <Route exact path=\"/vaccinations\" component={Vaccinations}/>\n              <Route exact path=\"/regional\" component={Regional}/>\n              <Route exact path=\"/news\" component={NewsPage}/>\n              <Route exact path=\"/info\" component={InfoPage}/>\n\n            </Switch>\n        \n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/admin/Desktop/shit/presentation/c19db/src/components/navigationBar.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/footer.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/informationPage/infoPage.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regional.jsx",["250","251","252","253","254"],"import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, CustomTooltip, Legend, ResponsiveContainer } from 'recharts';\nimport RegionalTable from './regionalTable';\nimport '../../styles/regional.css'\nimport regionalCaseData from './regionalCaseData';\n\nconst Regional = (props) => {\n\n    const numFormatter = new Intl.NumberFormat('en-US')\n\n    // const [totals, setTotals] = useState([])\n    // const [daily, setDaily] = useState([])\n\n    // useEffect(() => {\n    //     console.log(\"In regional page\")\n    //     try {\n    //         const getData = async() => {\n    //             const response = await axios.get('http://localhost:5000/regional')\n    //             setTotals(response.data.data.totals)\n    //             setDaily(response.data.data.daily)\n    //         }\n    //         getData()\n    //     }\n    //     catch(err) {\n    //         console.log(err)\n    //     }\n    // }, [])\n\n    const totals = regionalCaseData.totals\n    const daily = regionalCaseData.daily\n    // console.log(totals)\n    // console.log(daily)\n\n    const CustomizedAxisTick = (props) => {\n        const { x, y, payload } = props;\n        return (\n            <g transform={`translate(${x},${y})`}>\n                <text\n                    x={0}\n                    y={0}\n                    dy={16}\n                    textAnchor=\"end\"\n                    fill=\"#666\"\n                    transform=\"rotate(-35)\"\n                >\n                    {payload.value}\n                </text>\n            </g>\n        );\n    };\n    \n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            // console.log(payload)\n            return (\n                <div className=\"daily-graph-tooltip\">\n                    <p style={{textAlign:'center'}}><b>{label}</b></p>\n                    <p>Total Cases : {numFormatter.format(payload[0].payload[\"Total\"])}</p>\n                    <p>Active Cases : {numFormatter.format(payload[0].payload[\"Active Cases\"])}</p>\n                    <p>Recoveries : {numFormatter.format(payload[0].payload[\"Recoveries\"])}</p>\n                    <p>Deaths : {numFormatter.format(payload[0].payload[\"Deaths\"])}</p>\n                </div>\n            );\n        }\n        return null;\n    };\n\n    return (\n        <div className=\"regional-main-container\">\n            <div className=\"heading-container\">\n                <h1>Regional Cases</h1>\n                <h2>Total cases per region as of August 20, 2021</h2>\n            </div>\n\n            <div className=\"regional-chart-container\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                    <BarChart\n                        width={600}\n                        height={300}\n                        data={totals}\n                        margin={{\n                            top: 7,\n                            right: 30,\n                            left: 20,\n                            bottom: 7,\n                        }}\n                    >\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"Region\" tick={<CustomizedAxisTick />} height={70} interval={0} />\n                        <YAxis dataKey=\"Total\" tickFormatter={tick => numFormatter.format(tick)} />\n                        {/* <Tooltip formatter={value => numFormatter.format(value)} /> */}\n                        <Tooltip content={<CustomTooltip />} />\n                        <Legend />\n                        {/* <Bar dataKey=\"Total\" fill=\"#8884d8\" /> */}\n                        <Bar dataKey=\"Active Cases\" stackId=\"a\" fill=\"#FDBF49\" />\n                        <Bar dataKey=\"Recoveries\" stackId=\"a\" fill=\"#8AD085\" />\n                        <Bar dataKey=\"Deaths\" stackId=\"a\" fill=\"#702F6B\" />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n\n            <div className=\"heading-container\">\n                <h2>Timeline of cases per region</h2>\n            </div>\n\n            <div className=\"regional-chart regional-chart1\">\n                <RegionalTable data={daily}/>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Regional","/Users/admin/Desktop/shit/presentation/c19db/src/components/vaccinations/vaccinations.jsx",["255","256","257"],"import axios from 'axios'\nimport React, {useEffect} from 'react'\nimport { useState } from 'react'\nimport dateFormat from 'dateformat'\nimport {\n  AreaChart,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Area,\n  ResponsiveContainer\n} from \"recharts\";\nimport '../../styles/vaccinations.css'\nimport vaccinationData from './vaccinationData'\n\nconst Vaccinations = () => {\n    \n    const numFormatter = new Intl.NumberFormat('en-US')\n\n    // const [vaxData,setVaxData] = useState({});\n    // useEffect(() => {\n    //     try{\n    //         async function getData() {\n    //             const response = await axios.get('http://localhost:5000/vaccinations')\n    //             setVaxData(response.data.data)\n    //         }\n    //         getData()\n    //     }catch (e){\n    //         console.log('Error on fetching data from vaccinations route', e)\n    //     }\n    // }, []);\n\n    const vaxData = vaccinationData\n    console.log(vaxData);\n\n    var vaxChartData = []\n    var dailyVax = []\n    \n    function transformVaxData(){\n        let a;\n        for(a in vaxData.tableData){\n            if(vaxData.tableData[a].total_vaccinations !== 0 && vaxData.tableData[a].people_fully_vaccinated !== 0){\n                vaxChartData.push(\n                    {\n                        \"date\":dateFormat(vaxData.tableData[a].case_date,\"mediumDate\"),\n                        \"At Least One Dose\": vaxData.tableData[a].total_vaccinations,\n                        \"People Fully Vaccinated\": vaxData.tableData[a].people_fully_vaccinated\n                    }\n                )\n            }\n\n            if(vaxData.tableData[a].daily_vaccinations !== 0){\n                dailyVax.push(\n                    {\n                        \"date\":dateFormat(vaxData.tableData[a].case_date,\"mediumDate\"),\n                        \"Daily Vaccination\": vaxData.tableData[a].daily_vaccinations\n                    }\n                )\n            }\n        }\n    }\n\n    transformVaxData()\n\n\n    return (\n        <div className=\"content\">\n            <section className=\"heading-chart-container\">\n                <div className=\"heading-container\">\n                    <h1>Philippines Vaccination Data</h1>\n                    <h2>General overview as of <b>August 18, 2021</b></h2>\n                    <br/>\n                </div>\n\n                <div className=\"chart-container\">\n                    {/* <VaxChart/> */}\n                    <ResponsiveContainer width=\"100%\" length=\"100%\">\n                        <AreaChart\n                        // width={1150}\n                        // height={340}\n                        data={vaxChartData}\n                        margin={{\n                        top: 30,\n                        right: 30,\n                        left: 30,\n                        bottom: 30,\n                        }}>\n                            <defs>\n                                <linearGradient id=\"colorTotal\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0.8}/>\n                                    <stop offset=\"98%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0}/>\n                                </linearGradient>\n\n                                <linearGradient id=\"atLeastOne\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor=\"rgba(255,95,109,1)\" stopOpacity={0.8}/>\n                                    <stop offset=\"98%\" stopColor=\"rgba(255,95,109,1)\" stopOpacity={0}/>\n                                </linearGradient>\n                            </defs>\n                            \n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\n                            <YAxis type=\"number\" interval = \"preserveStartEnd\" tickFormatter={tick => numFormatter.format(tick)} />\n                            <Tooltip formatter={value => numFormatter.format(value)} />\n                            <Area type=\"monotone\" dataKey=\"At Least One Dose\" stroke=\"rgba(255,195,113,1)\" fillOpacity={1} fill=\"url(#colorTotal)\" />\n                            <Area type=\"monotone\" dataKey=\"People Fully Vaccinated\" stroke=\"rgba(255,95,109,1)\" fillOpacity={1} fill=\"url(#atLeastOne)\" />\n                            <Legend />\n                \n                        </AreaChart>\n                    </ResponsiveContainer>\n                </div>\n\n                \n                <h2 className=\"heading-title\"><br/><br/>Daily Vaccinations Administered</h2>\n                <div className=\"chart-container\">\n                    {/* <VaxChart/> */}\n                    <ResponsiveContainer width=\"100%\" length=\"100%\">\n                        <AreaChart\n                        // width={1150}\n                        // height={340}\n                        data={dailyVax}\n                        margin={{\n                        top: 30,\n                        right: 30,\n                        left: 30,\n                        bottom: 30,\n                        }}>\n                            <defs>\n                                <linearGradient id=\"dailyVaxColor\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                                    <stop offset=\"5%\" stopColor=\"rgba(97,183,142,1)\" stopOpacity={0.8}/>\n                                    <stop offset=\"98%\" stopColor=\"rgba(97,183,142,1)\" stopOpacity={0}/>\n                                </linearGradient>\n\n                            </defs>\n                            \n                            <CartesianGrid strokeDasharray=\"3 3\" />\n                            <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\n                            <YAxis type=\"number\" interval = \"preserveStartEnd\" tickFormatter={tick => numFormatter.format(tick)} />\n                            <Tooltip formatter={value => numFormatter.format(value)} />\n                            <Area type=\"monotone\" dataKey=\"Daily Vaccination\" stroke=\"rgba(97,183,142,1)\" fillOpacity={1} fill=\"url(#dailyVaxColor)\" />\n                            <Legend />\n                \n                        </AreaChart>\n                    </ResponsiveContainer>\n                </div>\n\n                <div className=\"text-info-container\">\n                    <div>\n                        <h2 className=\"heading-title\">Herd Immunity</h2>\n                        <div className=\"herd-immunity-container\">\n                            <p>The average number of doses administered in the last 5 days is <b>496,869</b>.</p>\n                            <p>At this rate, it will take about <b>7 months (April 2022)</b> to fully vaccinate 70% of the Filipino population and achieve Herd Immunity.</p>\n                        </div>\n                    </div>\n\n                    <div>\n                        <h2 className=\"heading-title\">Vaccinations per Hundred</h2>\n                        <div className=\"herd-immunity-container\">\n                            <p>The total number of people who are vaccinated is <b>23,199,187</b>.</p>\n                            <p><b>10,705,190</b> of these are already fully vaccinated (have received complete doses of their vaccine).</p>\n\n                            <p>This means, for every 100 people in the Philippines, about <b>21.17</b> are vaccinated and <b>9.77</b> are fully vaccinated.</p>\n                        </div>\n                    </div>\n                \n                </div>\n\n                \n            </section>\n        </div>  \n    )\n}\n\nexport default Vaccinations","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/news.jsx",["258","259","260","261","262"],"import axios from 'axios'\nimport React, { useMemo } from 'react'\nimport '../../styles/news.css'\nimport DateFnsUtils from '@date-io/date-fns'\nimport WeeklyCaseChart from './weeklyCaseChart'\nimport Grid from '@material-ui/core/Grid';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport { useState } from 'react'\nimport NewsCard from './newsCard'\nimport Pagination from './pagination'\nimport newsList from './newsList'\n\nlet PageSize = 5\n\nconst NewsPage = (props) => {\n    // News and date data variables\n    const [dateInput, setDateInput] = useState(Date.now())\n    const [selectedNews, setSelectedNews] = useState([])\n\n    // Pagination-related variables\n    const [currentPage, setCurrentPage] = useState(1)\n    \n    const currentNewsData = useMemo(() => {\n        const firstPageIndex = (currentPage - 1) * PageSize\n        const lastPageIndex = firstPageIndex + PageSize\n        return selectedNews.slice(firstPageIndex, lastPageIndex);\n    }, [currentPage, selectedNews])\n\n    // // This will convert the output date from the date picker to 'YYYY-MM-DD'\n    function convertDateFormat(str) {\n        var date = new Date(str),\n          mnth = (\"0\" + (date.getMonth() + 1)).slice(-2),\n          day = (\"0\" + date.getDate()).slice(-2);\n        return [date.getFullYear(), mnth, day].join(\"-\");\n    }\n\n    // // Changes the state of the input date when user picks a date from the date picked\n    const handleDateChange = (date) => {\n        setDateInput(date)\n    }\n\n    // // Call convertDateFormat and also gets the list of news from the server\n    const handleButtonClick = () => {\n        const newDate = convertDateFormat(dateInput)\n        getNews(newDate)\n    }\n\n    // // This is where the GET request happens\n    const getNews = async (date) => {\n        // const response = await axios.get(`http://localhost:5000/news/${date}`)\n        if(newsList[date] === undefined) {\n            setSelectedNews([])\n        }\n        else {\n            setSelectedNews(newsList[date])\n        }\n       \n        console.log(selectedNews)\n    }\n\n    return (\n        <div className=\"newsContainer\">\n            <div className=\"main-heading-container\">\n                <h1>Timeline And Events</h1>\n                <h3>See the latest updates of Covid-19 in the Philippines</h3>\n            </div>\n            \n            <WeeklyCaseChart/>\n            <div className=\"news-container\">\n                <h1>Get Latest Events</h1>\n                <div className=\"date-input-container\">\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <KeyboardDatePicker\n                            disableToolbar\n                            variant=\"inline\"\n                            format=\"MM/dd/yyyy\"\n                            margin=\"normal\"\n                            id=\"date-picker-inline\"\n                            label=\"Date picker inline\"\n                            value={dateInput}\n                            onChange={handleDateChange}\n                            KeyboardButtonProps={{\n                                'aria-label': 'change date',\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>\n                    <button onClick={handleButtonClick}>Show Events</button>\n                </div>\n\n                <div className=\"articles-container\">\n\n                    { (selectedNews.length == 0 || selectedNews == undefined) && \n                        <h2> No COVID-19 related news added in this date yet</h2>\n                    }\n\n                    \n                    { selectedNews.length > 0 && currentNewsData.map((article) => {\n                        const {news_title, news_link, news_source} = article\n                        return <NewsCard key={news_title} title={news_title} link={news_link} source={news_source} />\n                        })\n                    }\n                    \n                    <Pagination\n                        className=\"pagination-bar\"\n                        currentPage={currentPage}\n                        totalCount={selectedNews.length}\n                        pageSize={PageSize}\n                        onPageChange={page => setCurrentPage(page)}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NewsPage","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/homepage.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/news/pagination.js",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/news/newsCard.jsx",["263"],"import React from 'react'\nimport '../../styles/newsCard.css'\n\n\nconst NewsCard = ({title, link, source}) => {\n\n    return (\n        <a href={link} target=\"_blank\">\n            \n            <div className=\"news-card-container\">\n                <h1>{title}</h1>\n                <p>Source: {source}</p>\n            </div>\n\n        </a>\n    )\n}\n\nexport default NewsCard","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/weeklyCaseChart.jsx",["264","265","266"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend,\n    ResponsiveContainer\n} from \"recharts\";\nimport dateFormat from 'dateformat' \nimport caseDataRaw from '../home/caseDataRaw';\n\nconst WeeklyCaseChart = (props) => {\n\n    const numFormatter = new Intl.NumberFormat('en-US')\n\n    // const [data, setData] = useState({});\n\n    // useEffect(() => {\n    //     try{\n    //         let chartData;\n    \n    //         async function getData() {\n    //             const response = await axios.get('http://localhost:5000/home')\n    //             chartData = response.data.data\n\n    //             setData(chartData.counts)\n    //         }\n    //         getData()\n    //     }catch (e){\n    //         console.error(e)\n    //     }\n    // }, []);\n    const raw = caseDataRaw\n    const data = raw.counts\n\n    var weeklyArr=[]\n    function reformatWeekly() {\n        let a;\n        for(a in data.weekly){\n            weeklyArr.push({\n                \"date\":dateFormat(a,\"mediumDate\"), \n                \"New Cases\": data.weekly[a].newCase,\n                \"Recoveries\": data.weekly[a].recovery,\n                \"Deaths\": data.weekly[a].death,\n                \"Cumulative\": data.weekly[a].cumulative,\n            })       \n        }\n    }\n\n    reformatWeekly();\n\n    const WeeklyTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            // console.log(payload)\n            return (\n            <div className=\"daily-graph-tooltip\">\n                <p className=\"tooltip-date\">{`${label}`}</p>\n                <p className=\"tooltip-data\"><b>Cases: </b>{`${numFormatter.format(payload[0].value)}`}</p>\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${numFormatter.format(payload[0].payload[\"Recoveries\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${numFormatter.format(payload[0].payload[\"Deaths\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Cumulative Cases:</b> <br/>{`${numFormatter.format(payload[0].payload[\"Cumulative\"])}`}</p>\n            </div>\n            );\n        }\n        return null;\n    };\n\n    return(\n        <div className = \"main-chart\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n            width={1150}\n            height={340}\n            data={weeklyArr}\n            margin={{\n                top: 0,\n                right: 0,\n                left: 0,\n                bottom: 0,\n            }}\n            >\n                \n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\n                <YAxis dataKey=\"New Cases\" tickFormatter={tick => numFormatter.format(tick)} />\n                <Tooltip content={<WeeklyTooltip/>}/>\n                <Line type=\"monotone\" dataKey=\"New Cases\" stroke=\"rgba(33,147,176,1)\" dot = {{r:1}} activeDot={{ r: 4 }} />\n                <Legend />\n            </LineChart>\n        </ResponsiveContainer>\n    </div>\n\n\n\n    )\n}\n\nexport default WeeklyCaseChart","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/overviewContainer.jsx",["267","268","269"],"import React, { useState, useEffect } from \"react\";\nimport '../../styles/overviewContainer.css'\nimport CaseDataBox from './caseData.jsx'\nimport CasesChart from \"./caseChart\";\n// import dateFormat from 'dateformat';\n\nfunction OverviewContainer({data}) {\n    // const [dt, setDt] = useState(new Date().toLocaleString());\n    \n\n    // useEffect(() => {\n    //     // getData()\n    //     let secTimer = setInterval( () => {\n    //         setDt(new Date().toLocaleString())\n    //     },1000)\n\n    //     return () => {\n    //         clearInterval(secTimer)\n    //     };\n   \n    // }, []);\n\n\n    //TO-DO: Change date format into dddd, mmmm, dS, yyyy\n    return(\n        <div className = \"overview-cont\">\n            <div className = \"headings\">\n                {/* <h1>COVID-19 Dashboard</h1> */}\n                <p>General Overview as of <b>Aug. 20, 2021</b></p>\n            </div>\n            <div className = \"case-data-ov\">\n                <CaseDataBox data = {data}/>\n            </div>\n        </div>\n    );\n}\nexport default OverviewContainer;","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/caseChart.jsx",["270","271","272"],"import React, { useEffect,useState } from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from \"recharts\";\nimport axios from 'axios'\nimport dateFormat from 'dateformat'\n\nexport default function CasesChart({data}) {\n    // const [data, setData] = useState({});\n\n    const numFormatter = new Intl.NumberFormat('en-US')\n\n    // load Data from server\n    // useEffect(() => {\n    //     try{\n    //         let chartData;\n    \n    //         async function getData() {\n    //             const response = await axios.get('http://localhost:5000/home')\n    //             chartData = response.data.data\n\n    //             setData(chartData.counts)\n    //         }\n    //         getData()\n    //     }catch (e){\n    //         console.error(e)\n    //     }\n    // }, []);\n    // console.log(data)\n\n    // make function that follows rechart's data format\n    // const daily = [\n    //     {\n    //         \"date\": date,\n    //         \"newcases\": cases,\n    //     }\n    // ]\n\n    \n    // console.log(data)\n\n    var dailyArr=[]\n    function reformatDaily() {\n        let a;\n        for(a in data.counts.daily){\n            dailyArr.push(\n                {\"date\":dateFormat(a,\"mediumDate\"), \n                \"New Cases\": data.counts.daily[a].newCase,\n                \"Recoveries\": data.counts.daily[a].recovery,\n                \"Deaths\": data.counts.daily[a].death,\n                // \"Cumulative Deaths up to this Day\": data.daily[a].cumulative,\n                \"Cumulative\": data.counts.daily[a].cumulative,\n                }\n            )       \n        }\n    }\n\n    reformatDaily();\n    // console.log(dailyArr);\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n            // console.log(payload)\n            return (\n            <div className=\"daily-graph-tooltip\">\n                <p className=\"tooltip-date\">{`${label}`}</p>\n                <p className=\"tooltip-data\"><b>Cases: </b>{`${numFormatter.format(payload[0].value)}`}</p>\n                <p className=\"tooltip-data\"><b>Recoveries:</b> {`${numFormatter.format(payload[0].payload[\"Recoveries\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Deaths:</b> {`${numFormatter.format(payload[0].payload[\"Deaths\"])}`}</p>\n                <p className=\"tooltip-data\"><b>Cumulative Cases:</b> <br/>{`${numFormatter.format(payload[0].payload[\"Cumulative\"])}`}</p>\n            </div>\n            );\n        }\n        return null;\n    };\n\n    return (\n            <div className = \"main-chart\">\n                <ResponsiveContainer  width=\"100%\" height=\"100%\">\n                    <LineChart\n                    width={1150}\n                    height={340}\n                    data={dailyArr}\n                    margin={{\n                        top: 0,\n                        right: 0,\n                        left: 0,\n                        bottom: 0,\n                    }}\n                    >\n                        \n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\n                        <YAxis dataKey=\"New Cases\" tickFormatter={tick => numFormatter.format(tick)} />\n                        <Tooltip content={<CustomTooltip/>}/>\n                        <Line type=\"monotone\" dataKey=\"New Cases\" stroke=\"rgba(33,147,176,1)\" dot = {{r:1}} activeDot={{ r: 4 }} />\n                        <Legend />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n    );\n}\n","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/vaxChart.jsx",["273","274","275"],"import React, {useEffect, useState } from 'react';\nimport '../../styles/casesChart.css';\nimport axios from 'axios';\nimport {\n  AreaChart,\n//   ReferenceDot,\n//   ReferenceLine,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Area,\n  ResponsiveContainer\n} from \"recharts\";\nimport dateFormat from 'dateformat'\nimport vaccinationData from './../vaccinations/vaccinationData'\n\n\n\n\nconst VaxChart = () => {\n\n    const numFormatter = new Intl.NumberFormat('en-US')\n\n    // const [vaxData,setVaxData] = useState({});\n    // useEffect(() => {\n    //     try{\n    //         async function getData() {\n    //             const response = await axios.get('http://localhost:5000/vaccinations')\n    //             setVaxData(response.data.data)\n    //         }\n    //         getData()\n    //     }catch (e){\n    //         console.log('Error on fetching data from vaccinations route', e)\n    //     }\n    // }, []);\n\n    const vaxData = vaccinationData\n    console.log(vaxData);\n\n    /**\n        Make a funciton that transfroms vax data into recharts format\n        const daily = [\n            \"Date\" : date,\n            \"Vaccination Count\": vaxcount\n        ]\n    */\n\n    var daily = []\n    \n    function transformVaxData(){\n        let a;\n        for(a in vaxData.graphData){\n            if(vaxData.graphData[a].total_vaccinations !== 0){\n                daily.push(\n                    {\n                        \"date\":dateFormat(vaxData.graphData[a].case_date,\"mediumDate\"),\n                        \"Vaccination Count\": vaxData.graphData[a].total_vaccinations\n                    }\n                )\n            }\n        }\n    }\n\n    transformVaxData()\n\n    console.log(daily)\n\n\n    return(\n        <div className= \"main-chart\" id=\"vax-chart\">\n            <ResponsiveContainer width=\"100%\" length=\"100%\">\n                <AreaChart\n                width={1150}\n                height={340}\n                data={daily}\n                margin={{\n                top: 30,\n                right: 30,\n                left: 30,\n                bottom: 30,\n                }}>\n                    <defs>\n                        <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                            <stop offset=\"5%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0.8}/>\n                            <stop offset=\"98%\" stopColor=\"rgba(255,195,113,1)\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                       \n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\"  tick = {{fontSize: 11}}/>\n                    <YAxis type=\"number\" interval = \"preserveStartEnd\" tickFormatter={tick => numFormatter.format(tick)} />\n                    <Tooltip formatter={value => numFormatter.format(value)} />\n                    <Area type=\"monotone\" dataKey=\"Vaccination Count\" stroke=\"rgba(255,195,113,1)\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                    <Legend />\n        \n                        \n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default VaxChart;","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/information.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/home/regionalOverview.jsx",["276","277","278","279","280","281","282","283","284","285"],"import React, { useState } from 'react'\nimport '../../styles/regionalOverview.css'\nimport RegionalPieChart from './regionalPieChart'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport Loader from './loader'\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\nimport regionalCaseData from '../regional/regionalCaseData'\n\nconst RegionNames = {\n    BARMM: \"BARMM\",\n    CAR: \"CAR\",\n    NCR: \"NCR\",\n    R1: \"Ilocos Region\",\n    R2: \"Cagayan Valley\",\n    R3: \"Central Luzon\",\n    R4a: \"CALABARZON\",\n    R4b: \"MIMAROPA\",\n    R5: \"Bicol Region\",\n    R6: \"Western Visayas\",\n    R7: \"Central Visayas\",\n    R8: \"Eastern Visayas\",\n    R9: \"Zamboangaa Peninsula\",\n    R10: \"Northern Mindanao\",\n    R11: \"Davao Region\",\n    R12: \"Soccsksargen\",\n    CARAGA: \"CARAGA\",\n    ROF: \"ROF\"\n}\n\nfunction formatData(data) {\n    console.log(\"in formatData function\")\n  \n    const formattedData = []\n    Object.keys(data).forEach((d) => {\n      if(d != 'total') {\n        formattedData.push({\n          name: d,\n          value: data[d]\n        })\n      }\n    })  \n    \n    return formattedData\n}\n\nconst RegionalOverview = (props) => {\n    // const [provinceTotals, setProvinceTotals] = useState([])\n    // const [regions, setRegions] = useState([])\n    // const [chartData, setChartData] = useState([])  \n\n    // useEffect(() => {   \n    //     async function getRegionalData() {\n    //         try {\n    //             const response = await axios.get('http://localhost:5000/regional')\n    //             setProvinceTotals(response.data.data.provinceTotals)\n    //             setRegions(Object.keys(response.data.data.provinceTotals))\n    //         } catch(err) {\n    //             console.log(err)\n    //         }\n    //     }\n    //     getRegionalData()\n        \n    // }, [])\n\n    const provinceTotals = regionalCaseData.provinceTotals\n    const regions = Object.keys(regionalCaseData.provinceTotals)\n    const chartData = []\n    \n    regions.forEach((r) => {\n        chartData.push(formatData(provinceTotals[r]))\n    })\n\n    console.log(chartData)\n    \n\n\n    return(\n        <>\n            {/* <div className=\"heading\">\n                <h1>Regional Cases Overview</h1>\n            </div> */}\n\n            <div className=\"regional-overview-container\">\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#FF716E\" data={chartData[0]} name={regions[0]}/>\n                    <h2>{RegionNames[regions[0]]}</h2>\n                </div>\n\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#67D0E9\" data={chartData[1]} name={regions[1]}/>\n                    <h2>{RegionNames[regions[1]]}</h2>\n                </div>\n\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#64B88D\" data={chartData[2]} name={regions[2]}/>\n                    <h2>{RegionNames[regions[2]]}</h2>\n                </div>\n\n                <div className=\"region-container region-container1\">              \n                    <RegionalPieChart chartColor=\"#FF9B05\" data={chartData[3]} name={regions[3]}/>\n                    <h2>{RegionNames[regions[3]]}</h2>\n                </div>\n\n            </div>  \n\n            {/* <div className=\"see-more-regional\">\n                <a href=\"/regional\"><h3> Regional Statistics And Analyses </h3></a>\n            </div> */}\n        </>\n    )\n}\n\nexport default RegionalOverview","/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regionalTable.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/home/caseData.jsx",["286","287","288"],"import React, { useEffect,useState } from 'react';\nimport axios from 'axios'\n\nfunction CaseDataBox({data}){   \n    // const [counts, setCounts] = useState({});\n    \n\n    // useEffect(() => {\n    //     try{\n    //         let homeData;\n\n    //         async function getData () {\n    //             const response = await axios.get('http://localhost:5000/home')\n    //             homeData = response.data.data\n\n    //             console.log(homeData)   \n    //             setCounts(homeData.counts)\n    //         }\n\n    //         getData()\n\n    //     }catch(e){\n    //         console.error(e)\n    //     }\n    // },[])\n\n    // const getData = async () => {\n    //     const response = await axios.get('http://localhost:5000/home')\n    //     homeData = response.data.data\n\n    //     // console.log(homeData)   \n    //     setCounts(homeData.counts)\n    //     // console.log(counts)\n    // }\n\n    const type2style = {\n        // background: \"rgb(255,95,109)\",\n        background: \"linear-gradient(225deg, rgba(255,95,109,1) 27%, rgba(255,195,113,1) 100%)\",\n    };\n\n    const type3style ={\n        background: \"linear-gradient(225deg, rgba(97,183,142,1) 27%, rgba(178,232,124,1) 100%)\",\n    }\n\n    const type4style = {\n        background: \"linear-gradient(225deg, rgba(255,153,0,1) 27%, rgba(251,228,145,1) 100%)\"\n    }\n\n    const type5style = {\n        background: \"linear-gradient(225deg, rgba(29,38,113,1) 27%, rgba(195,55,100,1) 100%)\"\n    }\n\n    const numFormatter = new Intl.NumberFormat('en-US')\n    // console.log(numFormatter.format(givenNumber))\n\n    \n    \n\n    // console.log(counts)\n\n    return(\n        <>\n            <div className = \"data-container-ov\">\n                <h1 className=\"data-val\">{numFormatter.format(data.counts.newCaseCount)} </h1> \n                {/* <h1 className=\"data-val\">0</h1>  */}\n                <h2 className=\"data-label\">New Cases</h2>\n            </div>\n\n            <div className = \"data-container-ov\" style = {type2style}>\n                <h1 className=\"data-val\">{numFormatter.format(data.counts.totalCaseCount)}</h1>\n                {/* <h1 className=\"data-val\">0</h1> */}\n                <h2 className=\"data-label\">Total Cases</h2>\n            </div>\n\n            <div className = \"data-container-ov\" style = {type3style}>\n                <h1 className=\"data-val\">{numFormatter.format(data.counts.recoveryCount)}</h1>\n                {/* <h1 className=\"data-val\">0</h1> */}\n                <h2 className=\"data-label\">Total Recoveries</h2>\n            </div>\n\n            <div className = \"data-container-ov\" style={type4style}>\n                <h1 className=\"data-val\">{numFormatter.format(data.counts.activeCaseCount)}</h1>\n                {/* <h1 className=\"data-val\">0</h1> */}\n                <h2 className=\"data-label\">Total Active Cases</h2>\n            </div>\n\n            <div className = \"data-container-ov\" style={type5style}>\n                <h1 className=\"data-val\">{numFormatter.format(data.counts.deathCount)}</h1>\n                {/* <h1 className=\"data-val\">0</h1> */}\n                <h2 className=\"data-label\">Deaths</h2>\n            </div>\n        </>\n    );\n}\n\nexport default CaseDataBox;","/Users/admin/Desktop/shit/presentation/c19db/src/components/news/usePagination.jsx",["289"],"import React, {useMemo} from 'react'\n\n\n//Pagination tutorial source: https://www.freecodecamp.org/news/build-a-custom-pagination-component-in-react/\nexport const DOTS = '...';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\n\nexport const usePagination = ({\n    totalCount,\n    pageSize,\n    siblingCount = 1,\n    currentPage\n}) => {\n        const paginationRange = useMemo(() => {\n\n        const totalPageCount = Math.ceil(totalCount / pageSize)\n        const totalPageNumbers = siblingCount + 5\n\n\n        if (totalPageNumbers >= totalPageCount) {\n            return range(1, totalPageCount);\n        }\n\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n        const rightSiblingIndex = Math.min(\n          currentPage + siblingCount,\n          totalPageCount\n        );\n\n        const shouldShowLeftDots = leftSiblingIndex > 2;\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n        const firstPageIndex = 1;\n        const lastPageIndex = totalPageCount;\n\n        if (!shouldShowLeftDots && shouldShowRightDots) {\n            let leftItemCount = 3 + 2 * siblingCount;\n            let leftRange = range(1, leftItemCount);\n      \n            return [...leftRange, DOTS, totalPageCount];\n        }\n\n        if (shouldShowLeftDots && !shouldShowRightDots) {\n\n            let rightItemCount = 3 + 2 * siblingCount;\n            let rightRange = range(\n              totalPageCount - rightItemCount + 1,\n              totalPageCount\n            );\n\n            return [firstPageIndex, DOTS, ...rightRange];\n        }\n\n        if (shouldShowLeftDots && shouldShowRightDots) {\n          let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n          return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n        }\n\n    }, [totalCount, pageSize, siblingCount, currentPage])\n\n    return paginationRange\n}\n","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/regionalPieChart.jsx",["290","291","292","293"],"import React, {PureComponent,useState, useEffect} from 'react'\nimport { PieChart, Pie, Tooltip, ResponsiveContainer } from 'recharts';\n\n\n\nconst RegionalPieChart = (props) => {\n\n  const numFormatter = new Intl.NumberFormat('en-US')\n\n  return(\n      <PieChart width={200} height={200}>\n        <Pie\n          dataKey=\"value\"\n          isAnimationActive={false}\n          data={props.data}\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={90}\n          fill={props.chartColor}\n\n        />\n        <Tooltip formatter={value => numFormatter.format(value)} />\n      </PieChart>\n  )\n}\n  \n\nexport default RegionalPieChart\n\n","/Users/admin/Desktop/shit/presentation/c19db/src/components/home/loader.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regionalLineChart.jsx",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/news/newsList.js",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/home/caseDataRaw.js",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/regional/regionalCaseData.js",[],"/Users/admin/Desktop/shit/presentation/c19db/src/components/vaccinations/vaccinationData.js",[],{"ruleId":"294","severity":1,"message":"295","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":23},{"ruleId":"294","severity":1,"message":"298","line":18,"column":8,"nodeType":"296","messageId":"297","endLine":18,"endColumn":14},{"ruleId":"294","severity":1,"message":"299","line":20,"column":8,"nodeType":"296","messageId":"297","endLine":20,"endColumn":12},{"ruleId":"294","severity":1,"message":"300","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":12},{"ruleId":"294","severity":1,"message":"301","line":9,"column":3,"nodeType":"296","messageId":"297","endLine":9,"endColumn":21},{"ruleId":"302","severity":1,"message":"303","line":90,"column":39,"nodeType":"304","messageId":"305","endLine":90,"endColumn":41},{"ruleId":"294","severity":1,"message":"306","line":3,"column":25,"nodeType":"296","messageId":"297","endLine":3,"endColumn":29},{"ruleId":"307","severity":1,"message":"308","line":8,"column":9,"nodeType":"309","messageId":"310","endLine":8,"endColumn":40,"fix":"311"},{"ruleId":"294","severity":1,"message":"312","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":18},{"ruleId":"294","severity":1,"message":"313","line":95,"column":11,"nodeType":"296","messageId":"297","endLine":95,"endColumn":24},{"ruleId":"294","severity":1,"message":"314","line":24,"column":11,"nodeType":"296","messageId":"297","endLine":24,"endColumn":27},{"ruleId":"294","severity":1,"message":"315","line":5,"column":10,"nodeType":"296","messageId":"297","endLine":5,"endColumn":25},{"ruleId":"294","severity":1,"message":"316","line":8,"column":8,"nodeType":"296","messageId":"297","endLine":8,"endColumn":14},{"ruleId":"294","severity":1,"message":"317","line":9,"column":10,"nodeType":"296","messageId":"297","endLine":9,"endColumn":18},{"ruleId":"294","severity":1,"message":"318","line":9,"column":20,"nodeType":"296","messageId":"297","endLine":9,"endColumn":23},{"ruleId":"294","severity":1,"message":"319","line":9,"column":25,"nodeType":"296","messageId":"297","endLine":9,"endColumn":32},{"ruleId":"294","severity":1,"message":"320","line":9,"column":34,"nodeType":"296","messageId":"297","endLine":9,"endColumn":53},{"ruleId":"302","severity":1,"message":"321","line":37,"column":12,"nodeType":"304","messageId":"305","endLine":37,"endColumn":14},{"ruleId":"294","severity":1,"message":"322","line":51,"column":23,"nodeType":"296","messageId":"297","endLine":51,"endColumn":35},{"ruleId":"294","severity":1,"message":"323","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":29},{"ruleId":"294","severity":1,"message":"324","line":1,"column":30,"nodeType":"296","messageId":"297","endLine":1,"endColumn":38},{"ruleId":"294","severity":1,"message":"325","line":1,"column":40,"nodeType":"296","messageId":"297","endLine":1,"endColumn":49},{"ruleId":"294","severity":1,"message":"320","line":2,"column":34,"nodeType":"296","messageId":"297","endLine":2,"endColumn":53},{"ruleId":"294","severity":1,"message":"326","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"295","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":23},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","replacedBy":"330"},{"ruleId":"294","severity":1,"message":"298","line":18,"column":8,"nodeType":"296","messageId":"297","endLine":18,"endColumn":14},{"ruleId":"294","severity":1,"message":"325","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"324","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":35},{"ruleId":"294","severity":1,"message":"331","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":13},{"ruleId":"294","severity":1,"message":"306","line":3,"column":25,"nodeType":"296","messageId":"297","endLine":3,"endColumn":29},{"ruleId":"294","severity":1,"message":"332","line":3,"column":69,"nodeType":"296","messageId":"297","endLine":3,"endColumn":82},{"ruleId":"294","severity":1,"message":"331","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"325","line":2,"column":16,"nodeType":"296","messageId":"297","endLine":2,"endColumn":25},{"ruleId":"294","severity":1,"message":"324","line":3,"column":10,"nodeType":"296","messageId":"297","endLine":3,"endColumn":18},{"ruleId":"294","severity":1,"message":"331","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"300","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":12},{"ruleId":"294","severity":1,"message":"301","line":9,"column":3,"nodeType":"296","messageId":"297","endLine":9,"endColumn":21},{"ruleId":"302","severity":1,"message":"303","line":96,"column":44,"nodeType":"304","messageId":"305","endLine":96,"endColumn":46},{"ruleId":"302","severity":1,"message":"303","line":96,"column":65,"nodeType":"304","messageId":"305","endLine":96,"endColumn":67},{"ruleId":"307","severity":1,"message":"308","line":8,"column":9,"nodeType":"309","messageId":"310","endLine":8,"endColumn":40,"fix":"333"},{"ruleId":"294","severity":1,"message":"324","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":24},{"ruleId":"294","severity":1,"message":"325","line":1,"column":26,"nodeType":"296","messageId":"297","endLine":1,"endColumn":35},{"ruleId":"294","severity":1,"message":"331","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":13},{"ruleId":"294","severity":1,"message":"324","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"325","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"312","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":18},{"ruleId":"294","severity":1,"message":"325","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"294","severity":1,"message":"324","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":35},{"ruleId":"294","severity":1,"message":"331","line":12,"column":8,"nodeType":"296","messageId":"297","endLine":12,"endColumn":13},{"ruleId":"294","severity":1,"message":"325","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"324","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":35},{"ruleId":"294","severity":1,"message":"331","line":3,"column":8,"nodeType":"296","messageId":"297","endLine":3,"endColumn":13},{"ruleId":"294","severity":1,"message":"324","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":25},{"ruleId":"294","severity":1,"message":"315","line":4,"column":10,"nodeType":"296","messageId":"297","endLine":4,"endColumn":25},{"ruleId":"294","severity":1,"message":"331","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":13},{"ruleId":"294","severity":1,"message":"325","line":6,"column":10,"nodeType":"296","messageId":"297","endLine":6,"endColumn":19},{"ruleId":"294","severity":1,"message":"316","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":14},{"ruleId":"294","severity":1,"message":"317","line":8,"column":10,"nodeType":"296","messageId":"297","endLine":8,"endColumn":18},{"ruleId":"294","severity":1,"message":"318","line":8,"column":20,"nodeType":"296","messageId":"297","endLine":8,"endColumn":23},{"ruleId":"294","severity":1,"message":"319","line":8,"column":25,"nodeType":"296","messageId":"297","endLine":8,"endColumn":32},{"ruleId":"294","severity":1,"message":"320","line":8,"column":34,"nodeType":"296","messageId":"297","endLine":8,"endColumn":53},{"ruleId":"302","severity":1,"message":"321","line":37,"column":12,"nodeType":"304","messageId":"305","endLine":37,"endColumn":14},{"ruleId":"294","severity":1,"message":"325","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"294","severity":1,"message":"324","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":35},{"ruleId":"294","severity":1,"message":"331","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":13},{"ruleId":"294","severity":1,"message":"326","line":1,"column":8,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"323","line":1,"column":16,"nodeType":"296","messageId":"297","endLine":1,"endColumn":29},{"ruleId":"294","severity":1,"message":"324","line":1,"column":30,"nodeType":"296","messageId":"297","endLine":1,"endColumn":38},{"ruleId":"294","severity":1,"message":"325","line":1,"column":40,"nodeType":"296","messageId":"297","endLine":1,"endColumn":49},{"ruleId":"294","severity":1,"message":"320","line":2,"column":34,"nodeType":"296","messageId":"297","endLine":2,"endColumn":53},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","'News' is defined but never used.","'Grid' is defined but never used.","'KeyboardTimePicker' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Cell' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"334","text":"335"},"'CasesChart' is defined but never used.","'WeeklyTooltip' is assigned a value but never used.","'intlNumberFormat' is assigned a value but never used.","'FontAwesomeIcon' is defined but never used.","'Loader' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Tooltip' is defined but never used.","'ResponsiveContainer' is defined but never used.","Expected '!==' and instead saw '!='.","'setChartData' is assigned a value but never used.","'PureComponent' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","no-native-reassign",["336"],"no-negated-in-lhs",["337"],"'axios' is defined but never used.","'CustomTooltip' is defined but never used.",{"range":"338","text":"335"},[168,168]," rel=\"noreferrer\"","no-global-assign","no-unsafe-negation",[161,161]]